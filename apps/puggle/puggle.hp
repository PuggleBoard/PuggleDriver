//
//	 -------------------------------------------------------------------------
//
//	 This file is part of the Puggle Data Conversion and Processing System
//	 Copyright (C) 2013 Puggle
//
//	 -------------------------------------------------------------------------
//
//	Created in 2013 by: Yogi Patel <yapatel@gatech.edu>
//  Written by: Yogi Patel <yapatel@gatech.edu>
//  						Jon Newman <jnewman6@gatech.edu>
//
//	To the extent possible under law, the author(s) have dedicated all copyright
//	and related and neighboring rights to this software to the public domain
//	worldwide. This software is distributed without any warranty.
//
//	You should have received a copy of the CC Public Domain Dedication along with
//	this software. If not, see <http://creativecommons.org/licenses/by-sa/3.0/legalcode>.
//

#ifndef _PUGGLE_HP_
#define _PUGGLE_HP_

// TI Constants
#define PRU0_PRU1_INTERRUPT    				17
#define PRU1_PRU0_INTERRUPT    				18
#define PRU0_ARM_INTERRUPT     				19
#define PRU1_ARM_INTERRUPT      			20
#define ARM_PRU0_INTERRUPT      			21
#define ARM_PRU1_INTERRUPT      			22

// Memory pointers in constant table
#define CONST_PRUSSINTC 							C0
#define CONST_PRUCFG	     						C4
#define CONST_PRU_DATA0        				C24
#define CONST_PRU_DATA1        				C25
#define CONST_PRU_SHAREDRAM	   				C28
#define CONST_DDR            					C31

#define LOCAL_BUFFER_PAGE_SIZE        2048
#define LOCAL_BUFFER_NUM_PAGES        4
#define LOCAL_BUFFER_SIZE             (LOCAL_BUFFER_PAGE_SIZE * LOCAL_BUFFER_NUM_PAGES)
#define LOCAL_BUFFER_INFO_OFFSET      LOCAL_BUFFER_SIZE

// Constant table
#define CTBIR          								0x24020 // address for constant table block index reggister (CTBIR)
#define CTPPR_0         							0x24028 // address for constant table programmable pointer register 0(CTPPR_0)
#define CTPPR_1         							0x2402C // address for constant table programmable pointer register 1(CTPPR_1)

// Memory addresses
#define DDR_BASE_ADDR									0x80000000
#define OFFSET_DDR										0x00001008

#define PRU_DATA0_ADDR				    		0x00000000
#define PRU_DATA1_ADDR		    				0x00002000
#define COMMANDS_ADDR                 0x00010000 // address to store acquisition control commands in PRU shared RAM
#define PRU_SHARED_ADDR   						0x00010004 // address to begin storing acquired data in PRU shared RAM
#define	OFFSET_SHAREDRAM							0

// SPI Line for onboard AIO
#define SCLK	  											R30.t7
#define ADC_CS												R30.t11
#define DAC_CS												R30.t6
#define MOSI   												R30.t9
#define MISO   												R31.t8
#define CNV   												R30.t10

// AUX DIO
#define DIO_0													R30.1	
#define DIO_1													R31.0	
#define DIO_2													R31.3	
#define DIO_3													R31.2	
#define DIO_4													R30.5		
#define DIO_5													R30.4	

// Useful defines
#define NOP 													MOV R0, R0

// Magic number
#define MAGIC_NUM											0xbabe7175

// TI Macros
.macro LD32
.mparam dst,src
	LBBO dst,src,#0x00,4
.endm

.macro LD16
.mparam dst,src
	LBBO dst,src,#0x00,2
.endm

.macro LD8
.mparam dst,src
	LBBO dst,src,#0x00,1
.endm

.macro ST32
.mparam src,dst
	SBBO src,dst,#0x00,4
.endm

.macro ST16
.mparam src,dst
	SBBO src,dst,#0x00,2
.endm

.macro ST8
.mparam src,dst
	SBBO src,dst,#0x00,1
.endm

.macro delayOne
	MOV r29, 0
.endm

.macro delayTwo
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayThree
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayFour
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayFive
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayTen
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayTwenty
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayFourty
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delay
.mparam loops,tempreg=r29
	MOV tempreg, loops
	LOOP:
	SUB tempreg, tempreg, 1
		QBNE LOOP, tempreg, 0
.endm

.macro delay_ns
.mparam time_ns,tempreg=r29
	delay time_ns/5, tempreg
.endm

.macro delay_ms
.mparam time_ms,tempreg=r29
	delay_ns time_ms*1000000, tempreg
.endm

.macro delay_s
	delay_ms time_s*1000, tempreg
.endm

// Global Registers
.struct gReg
	.u32 regPtr
	.u32 regVal
.ends

// Global Register Assignment
.assign gReg, r12, *, global

#endif // puggle.hp
