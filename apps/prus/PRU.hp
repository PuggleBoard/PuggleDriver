//
//	 -------------------------------------------------------------------------
//
//	 This file is part of the Puggle Data Conversion and Processing System
//	 Copyright (C) 2013 Puggle
//
//	 -------------------------------------------------------------------------
//
//	Created in 2013 by: Yogi Patel <yapatel@gatech.edu>
//  Written by: Yogi Patel <yapatel@gatech.edu>
//  						Jon Newman <jnewman6@gatech.edu>
//
//	To the extent possible under law, the author(s) have dedicated all copyright
//	and related and neighboring rights to this software to the public domain
//	worldwide. This software is distributed without any warranty.
//
//	You should have received a copy of the CC Public Domain Dedication along with
//	this software. If not, see <http://creativecommons.org/licenses/by-sa/3.0/legalcode>.
//

#ifndef _PRU_HP_
#define _PRU_HP_

// TI Constants
#define PRU0_PRU1_INTERRUPT    				17
#define PRU1_PRU0_INTERRUPT    				18
#define PRU0_ARM_INTERRUPT     				19
#define PRU1_ARM_INTERRUPT      			20
#define ARM_PRU0_INTERRUPT      			21
#define ARM_PRU1_INTERRUPT      			22

#define CONST_PRUSSINTC 							C0
#define CONST_PRUCFG	     						C4
#define CONST_PRU_DATA0        				C24
#define CONST_PRU_DATA1        				C25
#define CONST_PRU_SHAREDRAM   				C28
#define CONST_DDR            					C31

// Address for the Constant table Block Index Register (CTBIR)
#define CTBIR          								0x24020

// Address for the Constant table Programmable Pointer Register 0(CTPPR_0)
#define CTPPR_0         							0x24028

// Address for the Constant table Programmable Pointer Register 1(CTPPR_1)
#define CTPPR_1         							0x2402C

#define INTC_CHNMAP_REGS_OFFSET       0x0400
#define INTC_HOSTMAP_REGS_OFFSET      0x0800
#define INTC_HOSTINTPRIO_REGS_OFFSET  0x0900
#define INTC_HOSTNEST_REGS_OFFSET     0x1100

// Memory addresses
#define PRU_DATA0_ADDR				    		0x00000000
#define PRU_DATA1_ADDR		    				0x00002000
// Memory location where to begin storing acquired data in PRU shared RAM
#define PRU_SHARED_ADDR   						0x00010004
// Memory block for acquisition control commands in PRU shared RAM
#define COMMANDS_ADDR                 0x00010000

// Pin mappings for custom SPI

// SPI SCLK
#define SPI_SCLK											R30.t8

// SPI0 = DAC
#define SPI0_CS												R30.t12
#define SPI0_MOSI   									R30.t13
#define SPI0_MISO   									R31.t11

// SPI1 = ADC
#define SPI1_CS     									R30.t10
#define SPI1_MOSI   									R30.t13
#define SPI1_CNV   										R30.t9

// Useful defines
#define NOP														MOV R0, R0

// TI Macros
.macro LD32
.mparam dst,src
	LBBO dst,src,#0x00,4
.endm

.macro LD16
.mparam dst,src
	LBBO dst,src,#0x00,2
.endm

.macro LD8
.mparam dst,src
	LBBO dst,src,#0x00,1
.endm

.macro ST32
.mparam src,dst
	SBBO src,dst,#0x00,4
.endm

.macro ST16
.mparam src,dst
	SBBO src,dst,#0x00,2
.endm

.macro ST8
.mparam src,dst
	SBBO src,dst,#0x00,1
.endm

.macro delayOne
	MOV r29, 0
.endm

.macro delayTwo
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayThree
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayFour
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayFive
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayTen
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayTwenty
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delayFourty
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
	MOV r29, 0
.endm

.macro delay
.mparam loops,tempreg=r29
	MOV tempreg, loops
	LOOP:
	SUB tempreg, tempreg, 1
		QBNE LOOP, tempreg, 0
.endm

.macro delay_ns
.mparam time_ns,tempreg=r29
	delay time_ns/5, tempreg
.endm

.macro delay_ms
.mparam time_ms,tempreg=r29
	delay_ns time_ms*1000000, tempreg
.endm

.macro delay_s
	delay_ms time_s*1000, tempreg
.endm

// Global Registers
.struct gReg
	.u32 regPtr
	.u32 regVal
.ends

// Global Register Assignment
.assign gReg, r12, *, global

#endif // PRU.hp
